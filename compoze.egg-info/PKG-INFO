Metadata-Version: 1.0
Name: compoze
Version: 0.1
Summary: Build package indexes
Home-page: http://www.repoze.org/compoze
Author: Agendaless Consulting
Author-email: reopze-dev@lists.repoze.org
License: BSD-derived (http://www.repoze.org/LICENSE.txt)
Description: repoze.project README
        
        Overview
        
        This package provides a convenient mechanism for creating standalone
        instances of repoze applications.
        
        Usage
        
        Installing 'repoze.project' via 'easy_install' (it doesn't
        depend on any other 'repoze' packages), creates a script,
        'repozeproject', in the scripts directory of your Python.
        
        Run this script to create a separate environment, with the
        given 'repoze' application (and its dependencies) installed.
        For instance, to install 'repoze.plone' into a new '/tmp/plone'
        directory:
        
        $ bin/easy_install -i http://dist.repoze.org/simple repoze.project
        $ bin/repozeproject --path=/tmp/plone repoze.plone
        
        You can also ask to have extra eggs installed.
        
        $ bin/repozeproject --path=/tmp/plone \
        repoze.plone some.package anotherpackage
        
        By default, those eggs will be installed from the 'repoze'
        package index;  if you want to use the Cheeseshop, prefix the
        package name with 'pypi:', e.g.::
        
        $ bin/repozeproject --path=/tmp/plone repoze.plone pypi:cheesy
        
        If left unspecified, the target path will be the current directory.
        E.g.::
        
        $ mkdir /tmp/plone2
        $ cd /tmp/plone2
        $ /path/to/environment/bin/repozeproject repoze.plone
        
        Theory of Operation
        
        'repozeproject' works as follows:
        
        - It uses the 'virtualenv' package to create a new "virtual"
        Python environment in the target directory, with an empty
        'site-packages' directory.
        
        - It then installs the eggs specified by the remaining arguments
        into the 'site-packages' of that environment, linking them into
        the 'easyinstall.pth' file there, so that they are on the
        'PYTHONPATH'.
        
        - Finally, it introspects the egg corresponding to the
        first-named argument ('repoze.plone' in the example above)
        for an entry point of type 'repoze.initproject'.  If found,
        it runs that entry point, which can then create additional
        files or directories in the environment.
        
        In the case of a Zope2-based project, this might include:
        
        o Creating empty 'etc', 'var', and 'log' directories.
        
        o Generating config files ('etc/zope.conf', 'etc/site.zcml',
        'etc/paste.ini') using skeleton templates from the egg.
        
        o Creating additional convenience scripts not alreay generated
        during package installation.
        
        This last step is enabled by default;  to disable it, pass
        '--no-initialize-environment' on the command line to
        'repozeproject'.
        
        
        repoze.project Changelog
        
        repoze-project 0.0.4 (2007-10-24)
        
        - Depend on virtualenv >= 0.9.1 (so people who use Mac framework
        builds and already have an earlier non-working one installed are
        warned).
        
        repoze-project 0.0.3 (2007-10-22)
        
        - Change entry point group to 'repoze.project', use 'initialize'
        entry point name to find entry point.
        
        - More carefully specify requirement name for repoze.project
        so we always require the version in use by the parent Python.
        
        - Change '--target-path' option to '--path' for easier remembering.
        
        repoze-project 0.0.2 (2007-10-20)
        
        - Use entry points to initialize environment after installing eggs.
        
        repoze-project 0.0.1 (2007-10-19)
        
        - Initial pre-alpha release.
        
Keywords: web application server repoze
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Topic :: System :: Installation/Setup
